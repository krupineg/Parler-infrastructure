version: '3.8'
services:
    elasticsearch-data:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
        container_name: elasticsearch-data
        restart: unless-stopped
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - discovery.type=single-node
          - JSON_DATA=/usr/share/elasticsearch-data/seed
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
            - esdata1:/usr/share/elasticsearch-data/data
        ports:
            - 9200:9200    
        mem_limit: 2g
    parlr-api:
        image: krupineg/parlr-api:latest
        container_name: parlr-api
        restart: unless-stopped
        environment:
            - parlr_storage_type=elastic
            - parlr_storage_url=http://elasticsearch-data:9200
            - parlr_storage_name=parlr
        ports:
            - 8000:80
    parlr-web:
        image: krupineg/parlr-web:latest
        container_name: parlr-web
        restart: unless-stopped
        environment:
            - CHOKIDAR_USEPOLLING=true
            - REACT_APP_parlr_api_random_verb_url=http://parlr-api:8000/verbs/random
        ports:
            - 3000:3000

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        restart: unless-stopped
        volumes: 
            - /var/run/docker.sock:/var/run/docker.sock
        command: --interval 60 --cleanup true parlr-api iparlr-web


    nginx:
        image: nginx:mainline-alpine
        container_name: nginx
        restart: unless-stopped
        volumes:
          - ./data/nginx:/etc/nginx/conf.d
        ports:
          - "80:80"
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on:
            - parlr-web
            - parlr-api
volumes:
    esdata1:
        driver: local
