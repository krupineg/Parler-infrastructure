server {
    listen 80;
    server_name parlr.me www.parlr.me
    server_tokens off;

    root /usr/src/app;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}


server {
    listen 443 ssl;
    listen [::]:443 ssl http2;
    
    server_name parlr.me www.parlr.me
#    server_tokens off;

#   root /usr/src/app;
    
    ssl_certificate /etc/letsencrypt/live/parlr.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/parlr.me/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
#    ssl_buffer_size 8k;

#    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
#    ssl_prefer_server_ciphers on;

#    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

#    ssl_ecdh_curve secp384r1;
#    ssl_session_tickets off;

#    ssl_stapling on;
#    ssl_stapling_verify on;
#    resolver 8.8.8.8;

#    location /verbs {
#        proxy_pass http://parlr-api:8000/verbs;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Following is necessary for Websocket support
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";
#    }

    location / {
        proxy_pass http://parlr-web:3000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Following is necessary for Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}